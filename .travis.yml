# vim ft=yaml
# travis-ci.org definition for DataLad build
dist: jammy
language: python

services:
  - docker

git:
  # we use submodules to be managed with datalad
  submodules: false

python:
  - '3.7'
  - '3.8'
  - '3.9'
  - '3.10'
  - '3.11'

cache:
  - apt

env:
  global:
    # will be used in the matrix, where neither other variable is used
    - BOTO_CONFIG=/tmp/nowhere
    - DATALAD_TESTS_SSH=1
    - DATALAD_LOG_CMD_ENV=GIT_SSH_COMMAND
    - TESTS_TO_PERFORM=datalad_container
    - PYTEST_OPTS=-s
    # Special settings/helper for combined coverage from special remotes execution
    - COVERAGE=coverage
    - DATALAD_DATASETS_TOPURL=http://datasets-tests.datalad.org


before_install:
  # Just in case we need to check if nfs is there etc
  - sudo lsmod
  # The ultimate one-liner setup for NeuroDebian repository
  - bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
  - travis_retry sudo apt-get update -qq
  - travis_retry sudo apt-get install eatmydata  # to speedup some installations
  - sudo eatmydata tools/ci/prep-travis-forssh-sudo.sh
  - tools/ci/prep-travis-forssh.sh
  # install git-annex with the relevant bits
  # no recommends to avoid inheriting the entire multimedia stack
  - travis_retry sudo eatmydata apt-get install --no-install-recommends git-annex-standalone aria2 git-remote-gcrypt lsof gnupg nocache
  # chroot/container stuff
  - travis_retry sudo eatmydata apt-get install xz-utils jq
  - pip install --upgrade pip setuptools
  - tools/ci/install-singularity.sh


install:
  # Install standalone build of git-annex for the recent enough version
  - travis_retry sudo eatmydata apt-get install zip pandoc
  # for metadata support
  - git config --global user.email "test@travis.land"
  - git config --global user.name "Travis Almighty"
  - cd ..; pip install -q codecov; cd -
  - pip install -r requirements-devel.txt

script:
  # Test installation system-wide
  - sudo `which pip` install .
  # Run tests
  - http_proxy=
    PATH=$PWD/tools/coverage-bin:$PATH
    pytest $PYTEST_OPTS
      -v
      --cov datalad_container
      --log-cli-level=INFO
      --pyargs
      $TESTS_TO_PERFORM
  # Report WTF information using system wide installed version
  - datalad wtf

after_success:
  - coverage combine -a /tmp/.coverage-entrypoints-*
  - codecov
